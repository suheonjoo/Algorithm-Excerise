문제 1149 RGB거리(2)

dp

귀결되는 점 =나눠지는 경우의 수체크

빨강, 초록, 파랑이라서 
경우의 수가 3개라고 생각
--> 이건 큰틀

이전 값 비교는 2개만 비교하면 됨->min


마지막에 빨강색일 경우
r[N]=Math.min( g[N-1], b[N-1] )  +dp[N][0]


마지막이 초록색일 경우
g[N]=Math.min( r[N-1], b[N-1] )  +dp[N][1]

마지막이 파랑색일 경우
b[N]=Math.min( r[N-1], g[N-1] )  +dp[N][2]



나는 dp[N][3]에 입력 값을 저장하였고


이전 답에서는 r,g,b로 각 상수값을 받고 더해 줬음
나늬 r[] g[] b[]의 역할을 dp[][]로 대신함

어쨌든 내 방법도 맞음

