import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;


public class Main{      //파일 이름과 같아야 함

   static int[][] arr;
   static Integer[][] dp;
   static int N;
    
    public static void main(String[] args) throws IOException{

        Scanner in = new Scanner(System.in);
        
        int N = in.nextInt();   //깊이를 입력 받는다

        arr= new int[N][N];
        dp = new Integer[N][N];

        for(int i=0;i<N;i++){   //우선 입력값을 입력 받는다
            for(int j=0;j<i+1;j++){ 
                //자식 입력도 좌우대칭 트리모양으로 저장 하지 않고 앞에서부터 저장
                arr[i][j]=in.nextInt();
            }
        }

        for(int i=0;i<N;i++){   //가장 마지막 행의 값들을 dp의 마지막 행에도 똑같이 복사
            dp[N-1][i] = arr[N-1][i];
        }
        System.out.println(find(0,0));
        
    }

    static int find(int depth,int idx){
        //마지막 행일 경우 현재 위치의 dp값 반환
        if(depth==N-1){
            return dp[depth][idx];
        }

        if(dp[depth][idx]==null){
            dp[depth][idx]=Math.max(find(depth+1,idx),find(depth+1,idx+1))+arr[depth][idx];
        }//왼쪽자식부분은 깊이만 한칸 내려간 곳이고 오른쪽 자식은 그 인덱스 +1 부분이다 
        return dp[depth][idx];
    }
    
}














