{\rtf1\ansi\ansicpg949\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset129 AppleSDGothicNeo-Regular;\f2\fmodern\fcharset0 Courier;
\f3\fnil\fcharset0 Menlo-Regular;\f4\fmodern\fcharset0 Courier-Oblique;}
{\colortbl;\red255\green255\blue255;\red191\green100\blue38;\red32\green32\blue32;\red254\green187\blue91;
\red153\green168\blue186;\red86\green132\blue173;\red109\green109\blue109;\red133\green96\blue154;\red88\green118\blue71;
}
{\*\expandedcolortbl;;\csgenericrgb\c74902\c39216\c14902;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c99608\c73333\c35686;
\csgenericrgb\c60000\c65882\c72941;\csgenericrgb\c33725\c51765\c67843;\csgenericrgb\c42745\c42745\c42745;\csgenericrgb\c52157\c37647\c60392;\csgenericrgb\c34510\c46275\c27843;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww14400\viewh10800\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs30 \cf0 \
\
\

\f1 \'b5\'f0\'bd\'ba\'c5\'a9 \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\
\
\
\
 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f2\fs26 \cf2 \cb3 public static int \cf4 solution\cf5 (\cf2 int\cf5 [][] jobs) \{\
\
    \cf2 int \cf5 answer = \cf6 0\cf2 ;\
    int \cf5 end = \cf6 0\cf2 ; \cf7 // 
\f1 \'bc\'f6\'c7\'e0\'b5\'c7\'b0\'ed\'b3\'ad
\f3  
\f1 \'c1\'f7\'c8\'c4\'c0\'c7
\f3  
\f1 \'bd\'c3\'b0\'a3
\f3 \
    
\f2 \cf2 int \cf5 jobsIdx = \cf6 0\cf2 ; \cf7 // jobs 
\f1 \'b9\'e8\'bf\'ad\'c0\'c7
\f3  
\f1 \'c0\'ce\'b5\'a6\'bd\'ba
\f3 \
    
\f2 \cf2 int \cf5 count = \cf6 0\cf2 ; \cf7 // 
\f1 \'bc\'f6\'c7\'e0\'b5\'c8
\f3  
\f1 \'bf\'e4\'c3\'bb
\f3  
\f1 \'b0\'b9\'bc\'f6
\f3 \
\
\
    
\f2 // 
\f1 \'bf\'f8\'ba\'bb
\f3  
\f1 \'b9\'e8\'bf\'ad
\f3  
\f1 \'bf\'c0\'b8\'a7\'c2\'f7\'bc\'f8
\f3  
\f1 \'c1\'a4\'b7\'c4
\f2  (
\f1 \'bf\'e4\'c3\'bb\'bd\'c3\'b0\'a3
\f3  
\f1 \'bf\'c0\'b8\'a7\'c2\'f7\'bc\'f8
\f2 ) //
\f1 \'c0\'cc\'b0\'c5
\f3  
\f1 \'bf\'e4\'c3\'bb\'bd\'c3\'b0\'a3\'b4\'eb\'b7\'ce
\f3  
\f1 \'bf\'c0\'b8\'a7\'c2\'f7\'bc\'f8\'c0\'b8\'b7\'ce
\f3  
\f1 \'b3\'aa\'b4\'a9
\f3  
\f1 \'b0\'cd\'c0\'d3
\f2 !! 
\f1 \'be\'c6\'b7\'a1\'bf\'cd
\f3  
\f1 \'b4\'d9\'b8\'a7
\f3 \
    
\f2 \cf5 Arrays.
\f4\i sort
\f2\i0 (jobs\cf2 , \cf5 (o1\cf2 , \cf5 o2) -> o1[\cf6 0\cf5 ] - o2[\cf6 0\cf5 ])\cf2 ;\cf7 //
\f1 \'b3\'bb\'b8\'b2\'c2\'f7\'bc\'f8\'c0\'ba
\f2  o1-> o2, o2-> o1
\f1 \'c0\'b8\'b7\'ce
\f3  
\f1 \'b9\'d9\'b2\'d9\'b8\'e9
\f3  
\f1 \'b5\'ca
\f3 \
    
\f2 \cf5 System.
\f4\i \cf8 out
\f2\i0 \cf5 .println(\cf9 "jobs = " \cf5 + Arrays.
\f4\i deepToString
\f2\i0 (jobs))\cf2 ;\
\
\
\
    \cf7 // 
\f1 \'c3\'b3\'b8\'ae
\f3  
\f1 \'bd\'c3\'b0\'a3
\f3  
\f1 \'bf\'c0\'b8\'a7\'c2\'f7\'bc\'f8\'c0\'b8\'b7\'ce
\f3  
\f1 \'c1\'a4\'b7\'c4\'b5\'c7\'b4\'c2
\f3  
\f1 \'bf\'ec\'bc\'b1\'bc\'f8\'c0\'a7
\f3  
\f1 \'c5\'a5
\f2 (Heap) //
\f1 \'c0\'cc\'b0\'c5
\f3  
\f1 \'c0\'a7\'bf\'a1
\f2  o1[0] 
\f1 \'be\'c6\'b4\'cf\'b6\'f3
\f3  
\f1 \'c0\'ce\'b5\'a6\'bd\'ba\'b0\'a1
\f3  
\f1 \'b4\'d9
\f2  1
\f1 \'c0\'d3
\f2  -> 
\f1 \'c3\'b3\'b8\'ae
\f3  
\f1 \'bd\'c3\'b0\'a3\'c0\'b8\'b7\'ce
\f3  
\f1 \'bf\'c0\'b8\'a7
\f3  
\f1 \'c2\'f7\'bc\'f8\'c0\'b8\'b7\'ce
\f3  
\f1 \'b3\'aa\'b4\'ab
\f3  
\f1 \'b0\'cd\'c0\'d3
\f3 \
    
\f2 \cf5 PriorityQueue<\cf2 int\cf5 []> pq = \cf2 new \cf5 PriorityQueue<>((o1\cf2 , \cf5 o2) -> o1[\cf6 1\cf5 ] - o2[\cf6 1\cf5 ])\cf2 ;\
\
    \cf7 // 
\f1 \'bf\'e4\'c3\'bb\'c0\'cc
\f3  
\f1 \'b8\'f0\'b5\'ce
\f3  
\f1 \'bc\'f6\'c7\'e0\'b5\'c9
\f3  
\f1 \'b6\'a7\'b1\'ee\'c1\'f6
\f3  
\f1 \'b9\'dd\'ba\'b9
\f3 \
    
\f2 \cf2 while \cf5 (count < jobs.\cf8 length\cf5 ) \{\
\
        \cf7 // 
\f1 \'c7\'cf\'b3\'aa\'c0\'c7
\f3  
\f1 \'c0\'db\'be\'f7\'c0\'cc
\f3  
\f1 \'bf\'cf\'b7\'e1\'b5\'c7\'b4\'c2
\f3  
\f1 \'bd\'c3\'c1\'a1
\f2 (end)
\f1 \'b1\'ee\'c1\'f6
\f3  
\f1 \'b5\'e9\'be\'ee\'bf\'c2
\f3  
\f1 \'b8\'f0\'b5\'e7
\f3  
\f1 \'bf\'e4\'c3\'bb\'c0\'bb
\f3  
\f1 \'c5\'a5\'bf\'a1
\f3  
\f1 \'b3\'d6\'c0\'bd
\f3 \
        
\f2 \cf2 while \cf5 (jobsIdx < jobs.\cf8 length \cf5 && jobs[jobsIdx][\cf6 0\cf5 ] <= end) \{\
            pq.add(jobs[jobsIdx++])\cf2 ;\cf7 //
\f1 \'b3\'d6\'be\'ee\'c1\'d6\'b0\'ed
\f3  
\f1 \'c0\'ce\'b5\'a6\'bd\'ba
\f3  
\f1 \'b1\'e6\'c0\'cc
\f3  
\f1 \'b4\'c3\'b7\'c1\'c1\'dc
\f3 \
        
\f2 \cf5 \}\
\
        \cf7 // 
\f1 \'c5\'a5\'b0\'a1
\f3  
\f1 \'ba\'f1\'be\'ee\'c0\'d6\'b4\'d9\'b8\'e9
\f3  
\f1 \'c0\'db\'be\'f7
\f3  
\f1 \'bf\'cf\'b7\'e1
\f2 (end) 
\f1 \'c0\'cc\'c8\'c4\'bf\'a1
\f3  
\f1 \'b4\'d9\'bd\'c3
\f3  
\f1 \'bf\'e4\'c3\'bb\'c0\'cc
\f3  
\f1 \'b5\'e9\'be\'ee\'bf\'c2\'b4\'d9\'b4\'c2
\f3  
\f1 \'c0\'c7\'b9\'cc
\f3 \
        
\f2 // (end
\f1 \'b8\'a6
\f3  
\f1 \'bf\'e4\'c3\'bb\'c0\'c7
\f3  
\f1 \'b0\'a1\'c0\'e5
\f3  
\f1 \'c3\'b3\'c0\'bd\'c0\'b8\'b7\'ce
\f3  
\f1 \'b8\'c2\'c3\'e7\'c1\'dc
\f2 ) ********** 
\f1 \'c7\'f6\'c0\'e7
\f3  
\f1 \'c0\'db\'be\'f7\'c0\'bb
\f2  3ms
\f1 \'bf\'a1
\f3  
\f1 \'b3\'a1\'b3\'c2\'b4\'c2\'b5\'a5
\f2  3ms
\f1 \'b4\'eb\'bf\'a1
\f3  
\f1 \'be\'c6\'b9\'ab
\f3  
\f1 \'c0\'db\'be\'f7
\f3  
\f1 \'be\'f8\'b0\'ed
\f3  
\f1 \'b1\'d7\'c8\'c4
\f2  4ms
\f1 \'bf\'a1
\f3  
\f1 \'b4\'d9\'c0\'bd
\f3  
\f1 \'c0\'db\'be\'f7\'c0\'bb
\f3  
\f1 \'bd\'c3\'c0\'db\'c7\'cf\'b4\'c2
\f3  
\f1 \'b0\'e6\'bf\'ec\'b8\'a6
\f3  
\f1 \'b8\'bb\'c7\'d1
\f3 \
        
\f2 \cf2 if \cf5 (pq.isEmpty()) \{\
            end = jobs[jobsIdx][\cf6 0\cf5 ]\cf2 ;\
\
            \cf7 // 
\f1 \'c0\'db\'be\'f7\'c0\'cc
\f3  
\f1 \'b3\'a1\'b3\'aa\'b1\'e2
\f3  
\f1 \'c0\'fc
\f2 (end 
\f1 \'c0\'cc\'c0\'fc
\f2 ) 
\f1 \'b5\'e9\'be\'ee\'bf\'c2
\f3  
\f1 \'bf\'e4\'c3\'bb
\f3  
\f1 \'c1\'df
\f3  
\f1 \'b0\'a1\'c0\'e5
\f3  
\f1 \'bc\'f6\'c7\'e0\'bd\'c3\'b0\'a3\'c0\'cc
\f3  
\f1 \'c2\'aa\'c0\'ba
\f3  
\f1 \'bf\'e4\'c3\'bb\'ba\'ce\'c5\'cd
\f3  
\f1 \'bc\'f6\'c7\'e0
\f3 \
        
\f2 \cf5 \} \cf2 else \cf5 \{\
\
            \cf2 int\cf5 [] temp = pq.poll()\cf2 ;\
            \cf7 //
\f1 \'c7\'f6\'c0\'e7
\f3  
\f1 \'c0\'db\'be\'f7
\f3  
\f1 \'b3\'a1\'b3\'aa\'b4\'c2
\f3  
\f1 \'bd\'c3\'b0\'a3
\f2 (end+temp[1])
\f1 \'c7\'cf\'b0\'ed
\f3  
\f1 \'c1\'f6\'b1\'dd
\f3  
\f1 \'b3\'a1\'b3\'bd
\f3  
\f1 \'c0\'db\'be\'f7\'c1\'df\'bf\'a1\'bc\'ad
\f3  
\f1 \'bd\'c3\'c0\'db\'b0\'a1\'b4\'c9\'c7\'d1
\f3  
\f1 \'bd\'c3\'b0\'a3\'c0\'bb
\f3  
\f1 \'bb\'a9\'b8\'e9\'b5\'ca
\f3 \
            
\f2 \cf5 answer += temp[\cf6 1\cf5 ] + end - temp[\cf6 0\cf5 ]\cf2 ;\
            \cf7 //
\f1 \'c7\'f6\'c0\'e7
\f3  
\f1 \'c0\'db\'be\'f7
\f3  
\f1 \'b3\'a1\'b3\'ad
\f3  
\f1 \'bd\'c3\'b0\'a3
\f3  
\f1 \'b0\'bb\'bd\'c5
\f2  (end 
\f1 \'bf\'a1
\f3  
\f1 \'c0\'db\'b5\'bf
\f3  
\f1 \'bd\'c3\'b0\'a3
\f3  
\f1 \'b4\'f5\'c7\'d8\'c1\'dc
\f2 )\
            \cf5 end += temp[\cf6 1\cf5 ]\cf2 ;\
            \cf7 //
\f1 \'c0\'db\'be\'f7
\f3  
\f1 \'b8\'b6\'c4\'a3\'b0\'cd
\f3  
\f1 \'b0\'b3\'bc\'f6
\f3 \
            
\f2 \cf5 count++\cf2 ;\
        \cf5 \}\
    \}\
\
    \cf2 return \cf5 (\cf2 int\cf5 ) Math.
\f4\i floor
\f2\i0 (answer / jobs.\cf8 length\cf5 )\cf2 ;\
\
\cf5 \}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\fs30 \cf0 \cb1 \
\
\
\
\

\f0 \
\
\
\
\
\
\
\
\
}