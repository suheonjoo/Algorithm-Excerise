{\rtf1\ansi\ansicpg949\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset129 AppleSDGothicNeo-Regular;\f2\fmodern\fcharset0 Courier;
\f3\fnil\fcharset0 Menlo-Regular;\f4\fmodern\fcharset0 Courier-Oblique;}
{\colortbl;\red255\green255\blue255;\red191\green100\blue38;\red32\green32\blue32;\red153\green168\blue186;
\red254\green187\blue91;\red133\green96\blue154;\red109\green109\blue109;\red86\green132\blue173;\red88\green118\blue71;
}
{\*\expandedcolortbl;;\csgenericrgb\c74902\c39216\c14902;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c60000\c65882\c72941;
\csgenericrgb\c99608\c73333\c35686;\csgenericrgb\c52157\c37647\c60392;\csgenericrgb\c42745\c42745\c42745;\csgenericrgb\c33725\c51765\c67843;\csgenericrgb\c34510\c46275\c27843;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww14400\viewh10800\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs30 \cf0 \
\

\f1 \'c1\'d6\'bd\'c4\'b0\'a1\'b0\'dd
\f0 \
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f2\fs26 \cf2 \cb3 public static int\cf4 [] \cf5 solution\cf4 (\cf2 int\cf4 [] prices) \{\
\
    \cf2 int\cf4 [] ans = \cf2 new int\cf4 [prices.\cf6 length\cf4 ]\cf2 ;\
    \cf4 Stack<Integer> stack = \cf2 new \cf4 Stack()\cf2 ;\cf7 //
\f1 \'bd\'ba\'c5\'c3\'bf\'a1
\f3  
\f1 \'b3\'d6\'b4\'c2
\f3  
\f1 \'b0\'aa\'c0\'ba
\f2  "
\f1 \'c0\'ce\'b5\'a6\'bd\'ba
\f2 "
\f1 \'c0\'d3
\f3 \
\
    
\f2 \cf2 for \cf4 (\cf2 int \cf4 i = \cf8 0\cf2 ; \cf4 i < prices.\cf6 length\cf2 ; \cf4 i++) \{\
        \cf2 while \cf4 (!stack.isEmpty() && prices[i] < prices[stack.peek()]) \{\
            ans[stack.peek()] = i - stack.peek()\cf2 ;\
            \cf4 stack.pop()\cf2 ; \cf7 // 
\f1 \'b4\'e4\'c0\'bb
\f3  
\f1 \'b1\'b8\'c7\'df\'b1\'e2
\f3  
\f1 \'b6\'a7\'b9\'ae\'bf\'a1
\f2  stack
\f1 \'bf\'a1\'bc\'ad
\f3  
\f1 \'c1\'a6\'b0\'c5\'c7\'d1\'b4\'d9
\f3 \
            
\f2 \cf4 System.
\f4\i \cf6 out
\f2\i0 \cf4 .println(\cf9 "Arrays.toString(stack.toArray()) = " \cf4 + Arrays.
\f4\i toString
\f2\i0 (stack.toArray()))\cf2 ;;\
        \cf4 \}\
        System.
\f4\i \cf6 out
\f2\i0 \cf4 .println(\cf9 "stack.toArray() = " \cf4 + Arrays.
\f4\i toString
\f2\i0 (stack.toArray()))\cf2 ;;\
        \cf4 stack.push(i)\cf2 ;\
    \cf4 \}\
\
    \cf2 while \cf4 (!stack.isEmpty()) \{ \cf7 // 
\f1 \'b0\'aa\'c0\'bb
\f3  
\f1 \'b1\'b8\'c7\'cf\'c1\'f6
\f3  
\f1 \'b8\'f8\'c7\'d1
\f2  index == 
\f1 \'b3\'a1\'b1\'ee\'c1\'f6
\f3  
\f1 \'b0\'a1\'b0\'dd\'c0\'cc
\f3  
\f1 \'b6\'b3\'be\'ee\'c1\'f6\'c1\'f6
\f3  
\f1 \'be\'ca\'c0\'ba
\f3  
\f1 \'c1\'d6\'bd\'c4
\f3 \
        
\f2 \cf4 ans[stack.peek()] = prices.\cf6 length \cf4 - stack.peek() - \cf8 1\cf2 ;\
        \cf4 stack.pop()\cf2 ;\
    \cf4 \}\
\
    \cf2 return \cf4 ans\cf2 ;\
\
\cf4 \}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs30 \cf0 \cb1 \
\
\
\
\
\
\
\
\
\
\
\
}