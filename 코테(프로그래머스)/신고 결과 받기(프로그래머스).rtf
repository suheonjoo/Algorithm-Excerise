{\rtf1\ansi\ansicpg949\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset129 AppleSDGothicNeo-Regular;\f2\fmodern\fcharset0 Courier;
\f3\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red153\green168\blue186;\red32\green32\blue32;\red191\green100\blue38;
\red254\green187\blue91;\red88\green118\blue71;\red41\green50\blue40;\red86\green132\blue173;\red109\green109\blue109;
\red133\green96\blue154;}
{\*\expandedcolortbl;;\csgenericrgb\c60000\c65882\c72941;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c74902\c39216\c14902;
\csgenericrgb\c99608\c73333\c35686;\csgenericrgb\c34510\c46275\c27843;\csgenericrgb\c16078\c19608\c15686;\csgenericrgb\c33725\c51765\c67843;\csgenericrgb\c42745\c42745\c42745;
\csgenericrgb\c52157\c37647\c60392;}
\paperw11900\paperh16840\margl1440\margr1440\vieww13500\viewh10800\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs30 \cf0 \
\
\

\f1 \'b8\'ca\'c0\'b8\'b7\'ce idlist \'b9\'de\'c0\'bd\
String Integer\
\'c0\'cc\'b8\'a7    \'bd\'c5\'b0\'ed\'b5\'c8 \'c8\'bd\'bc\'f6\
\
\
report\'c0\'c7 \'b5\'de\'c0\'da\'b8\'ae \'b9\'ae\'c0\'da\'bf\'ad\'c0\'bb \'ba\'b8\'b8\'e9\'bc\'ad count\'b8\'a6 \'c7\'d8\'c1\'dc\
\
\'bd\'c5\'b0\'ed \'c8\'bd\'bc\'f6 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae \'c7\'cf\'b1\'e2\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \'bf\'a9\'b1\'e2\'bc\'ad trim\'c0\'b8\'b7\'ce \'b3\'aa\'b4\'a9\'b0\'ed \
\'be\'d5 \'b9\'ae\'c0\'da\'b7\'ce\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\
\
idlist\'b8\'a6 \'bc\'f8\'c8\'b8\'c7\'cf\'b8\'e9\'bc\'ad report \'be\'d5\'b1\'db\'c0\'da\'b0\'a1 \'c0\'da\'b1\'e2 \'c0\'da\'bd\'c5\'c7\'cf\'b0\'ed \'b0\'b0\'c0\'b8\'b8\'e9 \'b5\'da\'bf\'a1 \'b5\'da\'bf\'a1 \'bd\'c5\'b0\'ed\'c0\'da\'c0\'c7 value\'b0\'a1 \'bd\'c5\'b0\'ed \'b4\'a9\'c0\'fb\'c0\'b8\'b7\'ce \'b3\'d1\'c0\'b8\'b8\'e9 count \'c7\'d4 (count\'b4\'c2 \'b5\'fb\'b7\'ce \'b9\'e8\'bf\'ad\'c0\'bb \'b8\'b8\'b5\'e9\'b0\'ed)\
\
\
key value\
\'bd\'c5\'b0\'ed \'b9\'de\'c0\'ba \'bb\'e7\'b6\'f7, \'c0\'da\'b1\'e2\'b8\'a6 \'bd\'c5\'b0\'ed\'c7\'d1 \'bb\'e7\'b6\'f7 \'b8\'ae\'bd\'ba\'c6\'ae\
\
\'bf\'ec\'b8\'ae\'b0\'a1 \'b1\'b8\'c7\'cf\'b4\'c2\'b0\'c5: \'b3\'bb\'b0\'a1 \'bd\'c5\'b0\'ed\'c7\'d1 \'bb\'e7\'b6\'f7 \'c1\'df \'b8\'ee\'b8\'ed\'c0\'cc \'c1\'a4\'c1\'f6 \'b4\'e7\'c7\'df\'b3\'aa?\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \cb3 \
    
\f2 \cf4 public static int\cf2 [] \cf5 solution\cf2 (String[] id_list\cf4 , \cf2 String[] report\cf4 , int \cf2 k) \{\
\
\
\
        Map<String\cf4 , \cf2 Integer> idListMap = \cf4 new \cf2 HashMap<>()\cf4 ;\
\
        \cf2 Map<String\cf4 , \cf2 HashSet<String>> blameList = \cf4 new \cf2 HashMap<>()\cf4 ;\
        \cf2 Map<String\cf4 , \cf2 HashSet<String>> blamedList = \cf4 new \cf2 HashMap<>()\cf4 ;\
\
        for\cf2 (String id :id_list)\{\
            blameList.put(id\cf4 ,new \cf2 HashSet<>())\cf4 ;\
            \cf2 blamedList.put(id\cf4 ,new \cf2 HashSet<>())\cf4 ;\
        \cf2 \}\
\
        \cf4 for \cf2 (String reportDetail : report) \{\
            String[] split = reportDetail.split(\cf6 "\cb7  \cb3 "\cf2 )\cf4 ;\
            \cf2 blameList.get(split[\cf8 0\cf2 ]).add(split[\cf8 1\cf2 ])\cf4 ;\
            \cf2 blamedList.get(split[\cf8 1\cf2 ]).add(split[\cf8 0\cf2 ])\cf4 ;\
        \cf2 \}\
\
\cf9 //        for(String id :id_list)\{\
//            idListMap.put(id,blameList.get(id).size());\
//        \}\
\
        //System.out.println(blamedList.toString());\
        //System.out.println(blameList.toString());\
\
\
        \cf4 int\cf2 [] answer = \cf4 new int\cf2 [id_list.\cf10 length\cf2 ]\cf4 ;\
        for\cf2 (\cf4 int \cf2 i=\cf8 0\cf4 ;\cf2 i<answer.\cf10 length\cf4 ;\cf2 i++)\{\
            answer[i] = \cf8 0\cf4 ;\
        \cf2 \}\
\
        \cf9 //k
\f1 \'b9\'f8
\f3  
\f1 \'c0\'cc\'bb\'f3
\f3  
\f1 \'c1\'f6\'b8\'f1\'b4\'e7\'c7\'d1
\f3  
\f1 \'bb\'e7\'b6\'f7\'c0\'ba
\f3  
\f1 \'c0\'da\'bd\'c5\'c0\'bb
\f3  
\f1 \'c1\'f6\'b8\'f1\'c7\'d1\'bb\'ee\'bf\'a1\'b0\'d4
\f3  
\f1 \'b8\'de\'bc\'bc\'c1\'f6\'b8\'a6
\f3  
\f1 \'ba\'b8\'b3\'bf
\f3 \
        
\f2 //
\f1 \'b1\'d7\'b8\'ae\'b0\'ed
\f3  
\f1 \'b8\'de\'bd\'c3\'c1\'f6
\f3  
\f1 \'b9\'de\'c0\'ba
\f3  
\f1 \'bb\'e7\'b6\'f7\'c0\'ba
\f3  
\f1 \'b8\'de\'bc\'bc\'c1\'f6
\f3  
\f1 \'b0\'b3\'bc\'f6\'b8\'a6
\f3  
\f1 \'bc\'bc\'b4\'c2
\f3  
\f1 \'b0\'cd\'c0\'d3
\f3 \
        
\f2 //
\f1 \'b8\'d5\'c0\'fa
\f2  k
\f1 \'b9\'f8
\f3  
\f1 \'c1\'f6\'b8\'f1
\f3  
\f1 \'b4\'e7\'c7\'d1\'bb\'e7\'b6\'f7\'c0\'bb
\f3  
\f1 \'c3\'a3\'b0\'ed
\f3 \
        
\f2 //k
\f1 \'b9\'f8
\f3  
\f1 \'c1\'f6\'b8\'f1\'c7\'d1
\f3  
\f1 \'bb\'e7\'b6\'f7\'c0\'bb
\f3  
\f1 \'c3\'a3\'be\'c6
\f2  count 
\f1 \'c7\'d8\'c1\'dc
\f3 \
        
\f2 \cf4 for \cf2 (\cf4 int \cf2 i = \cf8 0\cf4 ; \cf2 i < id_list.\cf10 length\cf4 ; \cf2 i++) \{\
            \cf9 //
\f1 \'c8\'b8\'bf\'f8\'c0\'bb
\f3  
\f1 \'bc\'f8\'c8\'b8\'c7\'cf\'b8\'e9\'bc\'ad
\f2  k
\f1 \'b9\'f8
\f3  
\f1 \'c1\'f6\'b8\'f1
\f3  
\f1 \'b4\'e7\'c7\'d1
\f3  
\f1 \'bb\'e7\'b6\'f7
\f3  
\f1 \'c3\'a3\'c0\'bd
\f2 , //
\f1 \'b1\'d7\'b8\'ae\'b0\'ed
\f3  
\f1 \'b1\'d7
\f3  
\f1 \'c1\'f6\'b8\'f1\'c7\'d1
\f3  
\f1 \'bb\'e7\'b6\'f7
\f2  count ++
\f1 \'c7\'d8\'c1\'d6\'b1\'e2
\f3 \
            
\f2 \cf4 if \cf2 (blamedList.get(id_list[i]).size() >= k) \{\
                \cf4 for \cf2 (\cf4 int \cf2 j = \cf8 0\cf4 ; \cf2 j < id_list.\cf10 length\cf4 ; \cf2 j++) \{\
                    \cf4 if\cf2 (blameList.get(id_list[j]).contains(id_list[i]))\{\
                        answer[j]++\cf4 ;\
                    \cf2 \}\
                \}\
            \}\
        \}\
\
\
        \cf4 return \cf2 answer\cf4 ;\
    \cf2 \}\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\fs30 \cf0 \cb1 \
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\

\f0 \
\
\
\
\
\
\
\
\
}