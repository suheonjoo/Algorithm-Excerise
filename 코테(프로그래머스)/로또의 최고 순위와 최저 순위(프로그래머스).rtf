{\rtf1\ansi\ansicpg949\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset129 AppleSDGothicNeo-Regular;\f2\fmodern\fcharset0 Courier;
\f3\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red153\green168\blue186;\red32\green32\blue32;\red109\green109\blue109;
\red191\green100\blue38;\red86\green132\blue173;}
{\*\expandedcolortbl;;\csgenericrgb\c60000\c65882\c72941;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c42745\c42745\c42745;
\csgenericrgb\c74902\c39216\c14902;\csgenericrgb\c33725\c51765\c67843;}
\paperw11900\paperh16840\margl1440\margr1440\vieww13500\viewh10800\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs30 \cf0 \
\
\

\f1 \'b7\'ce\'b6\'c7\'c0\'c7 \'c3\'d6\'b0\'ed \'bc\'f8\'c0\'a7\'bf\'cd \'c3\'d6\'c0\'fa \'bc\'f8\'c0\'a7(\'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b8\'d3\'bd\'ba)\
\

\f0 \

\f1 \'b5\'d1\'b4\'d9 \'c7\'d8\'bd\'c3set\'bf\'a1 \'b4\'e3\'be\'c6 \'b3\'f5\'c0\'bd\
\
\'b8\'c2\'c8\'f9 \'b0\'b3\'bc\'f6 \'bc\'bc\'b1\'e2\
\
0\'c0\'cc \'c6\'f7\'c7\'d4\'b5\'c7\'be\'ee \'c0\'d6\'c0\'b8\'b8\'e9 \
\'b5\'d1\'b0\'b3\'bc\'f6 \'c2\'f7\'c0\'cc +1 = 0\'c0\'c7 \'b0\'b3\'bc\'f6\
\
max \'b8\'c2\'c8\'f9 \'b0\'b3\'bc\'f6+0\'c0\'c7 \'b0\'b3\'bc\'f6\
min \'b8\'c2\'c8\'f9 \'b0\'b3\'bc\'f6\
\
0\'c0\'cc \'c6\'f7\'c7\'d4\'b5\'c7\'be\'ee \'c0\'d6\'c1\'f6 \'be\'ca\'c0\'b8\'b8\'e9\
\'b8\'f0\'b8\'a3\'b4\'c2 \'bc\'fd\'c0\'da \'be\'f8\'b4\'c2 \'b0\'cd\'c0\'d3\
\
max= \'b8\'c2\'c8\'f9 \'b0\'b3\'bc\'f6\
min = \'b8\'c2\'c8\'f9 \'b0\'b3\'bc\'f6
\f0 \
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\fs26 \cf2 \cb3 \
\

\f2 \cf4 //        
\f1 \'b5\'d1\'b4\'d9
\f3  
\f1 \'c7\'d8\'bd\'c3
\f2 set
\f1 \'bf\'a1
\f3  
\f1 \'b4\'e3\'be\'c6
\f3  
\f1 \'b3\'f5\'c0\'bd
\f3 \
        
\f2 \cf2 HashSet<Integer> lottosSet = \cf5 new \cf2 HashSet<>()\cf5 ;\
        \cf2 HashSet<Integer> winNumSet = \cf5 new \cf2 HashSet<>()\cf5 ;\
\
        for \cf2 (\cf5 int \cf2 num : lottos) \{\
            lottosSet.add(num)\cf5 ;\
        \cf2 \}\
\
        \cf5 for \cf2 (\cf5 int \cf2 num: win_nums) \{\
            winNumSet.add(num)\cf5 ;\
        \cf2 \}\
\
\cf4 //        
\f1 \'b8\'c2\'c8\'f9
\f3  
\f1 \'b0\'b3\'bc\'f6
\f3  
\f1 \'bc\'bc\'b1\'e2
\f3 \
        
\f2 \cf5 int \cf2 correctCount=\cf6 0\cf5 ;\
\
        \cf2 Iterator<Integer> iterator = winNumSet.iterator()\cf5 ;\
\
        while \cf2 (iterator.hasNext()) \{\
            \cf4 //System.out.println("iterator.next() = " + iterator.next());\
            \cf5 if \cf2 (lottosSet.contains(iterator.next())) \{\
                correctCount++\cf5 ;\
            \cf2 \}\
        \}\
\
        \cf5 int \cf2 max\cf5 , \cf2 min\cf5 ;\
        \cf4 //        0
\f1 \'c0\'cc
\f3  
\f1 \'c6\'f7\'c7\'d4\'b5\'c7\'be\'ee
\f3  
\f1 \'c0\'d6\'c0\'b8\'b8\'e9
\f3 \

\f2 //        
\f1 \'b5\'d1\'b0\'b3\'bc\'f6
\f3  
\f1 \'c2\'f7\'c0\'cc
\f2  +1 = 0
\f1 \'c0\'c7
\f3  
\f1 \'b0\'b3\'bc\'f6
\f3 \

\f2 //\
        \cf5 if \cf2 (lottosSet.contains(\cf6 0\cf2 )) \{\
\
            max= correctCount+(winNumSet.size()-lottosSet.size())+\cf6 1\cf5 ;\
            \cf2 min = correctCount\cf5 ;\
        \cf2 \} \cf5 else \cf2 \{\
            max = correctCount\cf5 ;\
            \cf2 min = correctCount\cf5 ;\
\
        \cf2 \}\
\
        \cf4 //System.out.println("correctCount = " + correctCount);\
\
        \cf5 if \cf2 (\cf6 7\cf2 -min == \cf6 7\cf2 ) \{\
            min =\cf6 1\cf5 ;\
        \cf2 \}\
        \cf5 if \cf2 (\cf6 7\cf2 -max == \cf6 7\cf2 ) \{\
            max =\cf6 1\cf5 ;\
        \cf2 \}\
\
\
        \cf5 int\cf2 [] answer = \{\cf6 7\cf2 -max\cf5 , \cf6 7\cf2 -min\}\cf5 ;\
\
        return \cf2 answer\cf5 ;\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs30 \cf0 \cb1 \
\
\
\
\
\
\
\
\
\
\
\
\
\
}